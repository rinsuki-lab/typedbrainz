name: Build

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
      - run: corepack enable
      - run: pnpm install
      - name: Add dummy DBDefs
        run: |
          touch upstream/root/static/scripts/common/DBDefs.mjs
          touch upstream/root/static/scripts/common/DBDefs-client.mjs
      - run: pnpm build
      - name: Check for uncommitted changes
        id: diff-check
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "Changes detected after build"
            git diff > build-diff.patch
            exit 1
          else
            echo "No changes detected after build"
          fi
      - name: Upload build diff
        uses: actions/upload-artifact@v4
        if: failure() && steps.diff-check.outcome == 'failure'
        with:
          name: build-diff
          path: build-diff.patch
      - run: pnpm pack
      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: "*.tgz"
  release:
    runs-on: ubuntu-latest
    needs: build
    environment: release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          gh release create "$TAG" *.tgz \
            --title "$TAG" --generate-notes --draft
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
      - run: npm publish --provenance *.tgz
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
