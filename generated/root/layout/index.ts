// THIS FILE IS CONVERTED FROM Flow to TypeScript by TypedBrainz.
type $ReadOnlyArray<T> = readonly T[];
type $ReadOnly<T> = Readonly<T>;
type $ReadOnlyMap<K, V> = ReadonlyMap<K, V>;
type $Exact<T> = T; // TODO: implement properly
type $Keys<T> = keyof T;
type $Values<T> = T[keyof T];
import * as React from "react";
import { CatalystContext as CatalystContext } from "../context.mjs";
import manifest from "../static/manifest.mjs";
import { RT_MIRROR as RT_MIRROR } from "../static/scripts/common/constants.js";
import * as DBDefs from "../static/scripts/common/DBDefs.mjs";
import { commaOnlyListText as commaOnlyListText } from "../static/scripts/common/i18n/commaOnlyList.js";
import parseDate from "../static/scripts/common/utility/parseDate.js";
import { getRestrictionsForUser as getRestrictionsForUser, isBeginner as isBeginner } from "../static/scripts/common/utility/privileges.js";
import { age as age } from "../utility/age.js";
import { formatUserDateObject as formatUserDateObject } from "../utility/formatUserDate.js";
import getRequestCookie from "../utility/getRequestCookie.mjs";
import Footer from "./components/Footer.js";
import Head from "./components/Head.js";
import Header from "./components/Header.js";
import MergeHelper from "./components/MergeHelper.js";
"Unknown Type: ExpressionStatement";
"Unknown Type: ExpressionStatement";
"Unknown Type: BlockStatement";
"Unknown Type: ExpressionStatement";
"Unknown Type: ExpressionStatement";
"Unknown Type: BlockStatement";
"Unknown Type: FunctionDeclaration";
"Unknown Type: ExpressionStatement";
"Unknown Type: ExpressionStatement";
"Unknown Type: BlockStatement";
"Unknown Type: ExpressionStatement";
"Unknown Type: ExpressionStatement";
"Unknown Type: BlockStatement";
"Unknown Type: ExpressionStatement";
"Unknown Type: ExpressionStatement";
"Unknown Type: BlockStatement";
"Unknown Type: ExpressionStatement";
"Unknown Type: ExpressionStatement";
"Unknown Type: BlockStatement";
"Unknown Type: ExpressionStatement";
"Unknown Type: ExpressionStatement";
"Unknown Type: BlockStatement";
export default Layout;
