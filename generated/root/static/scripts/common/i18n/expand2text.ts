// THIS FILE IS CONVERTED FROM Flow to TypeScript by TypedBrainz.
import type { $ReadOnlyArray, $ReadOnly, $ReadOnlyMap, $Exact, $Keys, $Values, $_$Spread } from "../../../../../../src/type-utils.js";
import { l as lActual, ln as lnActual, lp as lpActual } from "../i18n.js";
import { l_admin as lAdminActual, ln_admin as lnAdminActual } from "./admin.js";
import expand, { NO_MATCH as NO_MATCH, Parser as Parser, VarArgsClass as VarArgsClass, VarArgsObject as VarArgsObject, createCondSubstParser as createCondSubstParser, createTextContentParser as createTextContentParser, parseContinuousString as parseContinuousString, parseStringVarSubst as parseStringVarSubst, state as state, VarArgs as VarArgs } from "./expand2.js";
import { l_statistics as lStatisticsActual, ln_statistics as lnStatisticsActual, lp_statistics as lpStatisticsActual } from "./statistics.js";
"WIP convertAST: VariableDeclaration";
"WIP convertAST: VariableDeclaration";
"WIP convertAST: FunctionDeclaration";
"WIP convertAST: VariableDeclaration";
"WIP convertAST: VariableDeclaration";
"WIP convertAST: VariableDeclaration";
"WIP convertAST: VariableDeclaration";
"WIP convertAST: VariableDeclaration";
"WIP convertAST: VariableDeclaration";
"WIP convertAST: FunctionDeclaration";
export default "WIP convertExpression: FunctionDeclaration";
"WIP convertAST_ExportNamedDeclaration: FunctionDeclaration";
export const l = "WIP convertExpression: ArrowFunctionExpression";
export const l_admin = "WIP convertExpression: ArrowFunctionExpression";
export const l_statistics = "WIP convertExpression: ArrowFunctionExpression";
export const ln = "WIP convertExpression: ArrowFunctionExpression";
export const ln_admin = "WIP convertExpression: ArrowFunctionExpression";
export const ln_statistics = "WIP convertExpression: ArrowFunctionExpression";
export const lp = "WIP convertExpression: ArrowFunctionExpression";
export const lp_statistics = "WIP convertExpression: ArrowFunctionExpression";
