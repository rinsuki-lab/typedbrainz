// THIS FILE IS CONVERTED FROM Flow to TypeScript by TypedBrainz.
type $ReadOnlyArray<T> = readonly T[];
type $ReadOnly<T> = Readonly<T>;
type $ReadOnlyMap<K, V> = ReadonlyMap<K, V>;
type $Exact<T> = T; // TODO: implement properly
type $Keys<T> = keyof T;
type $Values<T> = T[keyof T];
export const HIDE_MENU = "Unknown Expression Type: AsConstExpression";
export const HIGHLIGHT_NEXT_ITEM = "Unknown Expression Type: AsConstExpression";
export const HIGHLIGHT_PREVIOUS_ITEM = "Unknown Expression Type: AsConstExpression";
export const SHOW_MENU = "Unknown Expression Type: AsConstExpression";
export const SHOW_MORE_RESULTS = "Unknown Expression Type: AsConstExpression";
export const SEARCH_AGAIN = "Unknown Expression Type: AsConstExpression";
export const SHOW_LOOKUP_ERROR = "Unknown Expression Type: AsConstExpression";
export const SHOW_LOOKUP_TYPE_ERROR = "Unknown Expression Type: AsConstExpression";
export const SHOW_SEARCH_ERROR = "Unknown Expression Type: AsConstExpression";
export const STOP_SEARCH = "Unknown Expression Type: AsConstExpression";
export const TOGGLE_INDEXED_SEARCH = "Unknown Expression Type: AsConstExpression";
export const OPEN_ADD_ENTITY_DIALOG = "Unknown Expression Type: AsConstExpression";
export const CLOSE_ADD_ENTITY_DIALOG = "Unknown Expression Type: AsConstExpression";
