// THIS FILE IS CONVERTED FROM Flow to TypeScript by TypedBrainz.
type $ReadOnlyArray<T> = readonly T[];
type $ReadOnly<T> = Readonly<T>;
type $ReadOnlyMap<K, V> = ReadonlyMap<K, V>;
type $Exact<T> = T; // TODO: implement properly
type $Keys<T> = keyof T;
type $Values<T> = T[keyof T];
type _$Spread<T1, T2> = T2 & Omit<T1, keyof T2>;
import * as React from "react";
import { stripAttributes as stripAttributes } from "../../../edit/utility/linkPhrase.js";
import { INSTRUMENT_ROOT_ID as INSTRUMENT_ROOT_ID } from "../../constants.js";
import { unwrapNl as unwrapNl } from "../../i18n.js";
import commaOnlyList, { commaOnlyListText as commaOnlyListText } from "../../i18n/commaOnlyList.js";
import localizeLanguageName from "../../i18n/localizeLanguageName.js";
import localizeLinkAttributeTypeDescription from "../../i18n/localizeLinkAttributeTypeDescription.js";
import localizeLinkAttributeTypeName from "../../i18n/localizeLinkAttributeTypeName.js";
import { reduceArtistCredit as reduceArtistCredit } from "../../immutable-entities.js";
import bracketed, { bracketedText as bracketedText } from "../../utility/bracketed.js";
import formatDate from "../../utility/formatDate.js";
import formatDatePeriod from "../../utility/formatDatePeriod.js";
import formatTrackLength from "../../utility/formatTrackLength.js";
import { isDateNonEmpty as isDateNonEmpty } from "../../utility/isDateEmpty.js";
import CountryAbbr from "../CountryAbbr.js";
import type { EntityItemT as EntityItemT, ItemT as ItemT } from "./types.js";
"Unknown Type: VariableDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: VariableDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Export Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
"Unknown Type: FunctionDeclaration";
export type FormatOptionsT = {
    showDescriptions: boolean;
};
export default "Unknown Expression Type: FunctionDeclaration";
